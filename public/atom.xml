<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏见°の博客</title>
  
  <subtitle>欢迎加入</subtitle>
  <link href="http://mypeng.site/atom.xml" rel="self"/>
  
  <link href="http://mypeng.site/"/>
  <updated>2022-01-01T14:50:55.000Z</updated>
  <id>http://mypeng.site/</id>
  
  <author>
    <name>夏见°</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【测试工具】Charles破解</title>
    <link href="http://mypeng.site/posts/ea42950b"/>
    <id>http://mypeng.site/posts/ea42950b</id>
    <published>2022-01-01T14:50:55.000Z</published>
    <updated>2022-01-01T14:50:55.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Charles破解"><a href="#Charles破解" class="headerlink" title="Charles破解"></a>Charles破解</h2><p><a href="http://www.charles.ren" target="_blank" rel="noopener">http://www.charles.ren</a></p><h5 id="进入上面的网站，随意输入一个Registered-Name，点击「生成」"><a href="#进入上面的网站，随意输入一个Registered-Name，点击「生成」" class="headerlink" title="进入上面的网站，随意输入一个Registered Name，点击「生成」"></a>进入上面的网站，随意输入一个Registered Name，点击「生成」</h5><p>如：admin123则生成 772CD45F2C5839B6D3</p><p> <img src= "/img/loading1.gif" data-lazy-src="/img/charles_20220101225450.png" alt="img"> </p><h5 id="打开charles-help-register，输入刚刚生成的，然后就激活成功啦"><a href="#打开charles-help-register，输入刚刚生成的，然后就激活成功啦" class="headerlink" title="打开charles-help-register，输入刚刚生成的，然后就激活成功啦"></a>打开charles-help-register，输入刚刚生成的，然后就激活成功啦</h5><p> <img src= "/img/loading1.gif" data-lazy-src="/img/8B2FEFE6-9051-432B-BAED-7B76EFA85FE1.png" alt="img"> </p><p> <img src= "/img/loading1.gif" data-lazy-src="/img/1EE1E433-AB1C-436F-95B0-EFDA18C2BE82.png" alt="img"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="测试工具" scheme="http://mypeng.site/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客备份—妈妈再也不用担心你使用hexo写博客</title>
    <link href="http://mypeng.site/posts/a3886b70"/>
    <id>http://mypeng.site/posts/a3886b70</id>
    <published>2022-01-01T09:09:02.000Z</published>
    <updated>2022-01-01T09:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>今天搜了下hexo博客备份，发现好多都是用git命令备份的，于是推荐款好用的hexo备份插件：</p><p><a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="noopener">hexo-git-backup</a></p><h2 id="git-backup使用说明-翻译至README-："><a href="#git-backup使用说明-翻译至README-：" class="headerlink" title="git-backup使用说明(翻译至README)："></a><strong>git-backup使用说明(翻译至README)：</strong></h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><p>如果您的hexo版本是2.xx，则应安装如下：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ npm install hexo-git-backup@<span class="number">0</span>.<span class="number">0</span>.<span class="number">91</span> --save</span><br></pre></td></tr></table></figure><p>如果版本是3.xx，你应该安装如下：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a><strong>更新</strong></h3><p>(windows不需要$符)</p><p>如果使用–save进行安装，则在更新时必须先删除。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ npm remove hexo-git-backup</span><br><span class="line"></span><br><span class="line">$ npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a><strong>配置</strong></h3><p>你应该配置这个文件_config.yml如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">backup:</span><br><span class="line"></span><br><span class="line">    type: git</span><br><span class="line"></span><br><span class="line">    repository:</span><br><span class="line"></span><br><span class="line">      github: git@github.com:xxx&#x2F;xxx.git,branchName</span><br><span class="line"></span><br><span class="line">      gitcafe: git@github.com:xxx&#x2F;xxx.git,branchName</span><br></pre></td></tr></table></figure><p>比如博主就新建了个backup分支用于备份</p><p>博主的配置如下</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">backup:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">type</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">message</span>: <span class="title">backup</span> <span class="title">my</span> <span class="title">blog</span> <span class="title">of</span> <span class="title">https</span>://<span class="title">honjun.github.io</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">repository</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="title">github</span>: <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">honjun</span>/<span class="title">honjun.github.io.git</span>,<span class="title">backup</span></span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo backup</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo b</span><br></pre></td></tr></table></figure><p>Options</p><p>如果你要备份你的主题，只需添加theme: your theme name,your theme name在_config.yml。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">backup:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">theme:</span> <span class="string">coney,landscape,xxx</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">github:</span> <span class="string">git@github.com:xxx/xxx.git,branchName</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gitcafe:</span> <span class="string">git@github.com:xxx/xxx.git,branchName</span></span><br></pre></td></tr></table></figure><p><strong>注意：如果您按照上述方式操作，themes/coney/.git则会删除目录</strong></p><p>如果你想DIY提交消息，只需添加“消息：更新xxx”。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">backup:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">message:</span> <span class="string">update</span> <span class="string">xxx</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">github:</span> <span class="string">git@github.com:xxx/xxx.git,branchName</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">gitcafe:</span> <span class="string">git@github.com:xxx/xxx.git,branchName</span></span><br></pre></td></tr></table></figure><p>现在你可以备份所有的博客！</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h3><p>您的计算机许可可能会造成一些麻烦。</p><p><strong>错误：EISDIR，打开是由权限引起的。只要做’sudo hexo b’</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo hexo b</span><br></pre></td></tr></table></figure><p>参考<a href="https://www.v2ex.com/t/143022" target="_blank" rel="noopener">hexo 的备份插件</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>App自动化测试（一）之环境搭建</title>
    <link href="http://mypeng.site/posts/baaef441"/>
    <id>http://mypeng.site/posts/baaef441</id>
    <published>2021-12-26T06:28:25.000Z</published>
    <updated>2021-12-26T06:28:25.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="App自动化测试环境搭建"><a href="#App自动化测试环境搭建" class="headerlink" title="App自动化测试环境搭建"></a>App自动化测试环境搭建</h2><h2 id="一、准备jdk环境"><a href="#一、准备jdk环境" class="headerlink" title="一、准备jdk环境"></a>一、准备jdk环境</h2><p><a href="http://mypeng.site/post/54eecc7d.html">jdk安装和配置环境变量</a></p><h2 id="二、准备SDK环境"><a href="#二、准备SDK环境" class="headerlink" title="二、准备SDK环境"></a>二、准备SDK环境</h2><h4 id="1、-ADT-Bundle下载"><a href="#1、-ADT-Bundle下载" class="headerlink" title="1、 ADT Bundle下载"></a>1、 <a href="https://www.androiddevtools.cn/" target="_blank" rel="noopener">ADT Bundle下载</a></h4><p>ADT Bundle包含了Eclipse、ADT插件和SDK Tools，是已经集成好的IDE，只需安装好Jdk即可开始开发，推荐初学者下载ADT Bundle，不用再折腾开发环境。</p><p>下载adt-bundle-windows-x64.zip</p><p>链接：<a href="https://pan.baidu.com/s/1ZHKmPcbV4NVvZwoDzdAKpg" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZHKmPcbV4NVvZwoDzdAKpg</a><br>提取码：2gf7</p><h4 id="2、ADT-Bundle安装"><a href="#2、ADT-Bundle安装" class="headerlink" title="2、ADT Bundle安装"></a>2、ADT Bundle安装</h4><p>把下载好的 adt-bundle-windows-x86_64-20140702.zip 解压即可。</p><p> <img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229210636360-1610818154.png" alt="img">  </p><h4 id="3、配置环境变量"><a href="#3、配置环境变量" class="headerlink" title="3、配置环境变量"></a>3、配置环境变量</h4><ol><li><h5 id="点击此电脑右击–-gt-gt-点击属性"><a href="#点击此电脑右击–-gt-gt-点击属性" class="headerlink" title="点击此电脑右击–&gt;&gt;点击属性"></a>点击此电脑右击–&gt;&gt;点击属性</h5></li></ol><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229210702614-864284209.png" alt="img"></p><ol start="2"><li><h5 id="配置SDK环境变量"><a href="#配置SDK环境变量" class="headerlink" title="配置SDK环境变量"></a>配置SDK环境变量</h5></li></ol><p>变量名：ANDROID_HOME</p><p>变量值：D:\Program Files (x86)\adt-bundle-windows-x86_64-20140702\sdk（要填写你自己的地址）</p><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229210742813-1698355068.png" alt="img"></p><ol start="3"><li><h5 id="在path中添加变量"><a href="#在path中添加变量" class="headerlink" title="在path中添加变量"></a>在path中添加变量</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%ANDROID_HOME%\platform-tools</span><br><span class="line">%ANDROID_HOME%\tools</span><br><span class="line">%ANDROID_HOME%\build-tools\28.0.3</span><br></pre></td></tr></table></figure><h4 id="4、验证环境变量是否配置成功"><a href="#4、验证环境变量是否配置成功" class="headerlink" title="4、验证环境变量是否配置成功"></a>4、验证环境变量是否配置成功</h4><p>在cmd窗口输入，adb 和 aapt验证环境变量是否配置成功。（** <em>注意：如果环境变量配置确定无误，但是输入命令出不来，就重启下电脑</em>）</p><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229210909009-805568491.png" alt="img"></p><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229210835166-2050290710.png" alt="img"></p><h2 id="三、安装Appium"><a href="#三、安装Appium" class="headerlink" title="三、安装Appium"></a>三、安装Appium</h2><p>appium 是一个自动化测试开源工具，支持 iOS 平台和 Android 平台上的原生应用，web应用和混合应用。</p><h4 id="1、Appium下载"><a href="#1、Appium下载" class="headerlink" title="1、Appium下载"></a>1、<a href="https://github.com/appium/appium-desktop/releases/tag/v1.13.0" target="_blank" rel="noopener">Appium下载</a></h4><p>百度云下载：<br>链接：<a href="https://pan.baidu.com/s/1Di8Qh5NEYeSmQoVFqH6crQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Di8Qh5NEYeSmQoVFqH6crQ</a><br>提取码：huiq</p><h4 id="2、Appium安装"><a href="#2、Appium安装" class="headerlink" title="2、Appium安装"></a>2、Appium安装</h4><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229211000223-187798199.png" alt="img"></p><ol><li><p>点击Appium-windows-1.13.0.exe进行安装。<br><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229211032271-1280305583.png" alt="img"></p></li><li><p>选择 仅为我安装，点击安装。</p></li></ol><p><img src= "/img/loading1.gif" data-lazy-src="/img/environment/1895590-20200229211014622-396878393.png" alt="img"></p><ol start="3"><li>安装完成后打开后，可能会提示更新，切记莫更新！！</li></ol><h2 id="四、安装模拟器，或者使用真机"><a href="#四、安装模拟器，或者使用真机" class="headerlink" title="四、安装模拟器，或者使用真机"></a>四、安装模拟器，或者使用真机</h2><h5 id="模拟器推荐："><a href="#模拟器推荐：" class="headerlink" title="模拟器推荐："></a>模拟器推荐：</h5><p> <a href="https://www.ldmnq.com/" target="_blank" rel="noopener">【雷电】</a></p><p> <a href="https://www.yeshen.com/" target="_blank" rel="noopener">【夜神】</a></p><h2 id="五、安装Appium-Python-Client库"><a href="#五、安装Appium-Python-Client库" class="headerlink" title="五、安装Appium-Python-Client库"></a>五、安装Appium-Python-Client库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Copypip install appium-python-client</span><br><span class="line"><span class="comment"># 下载不成功可以加上国内镜像</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">镜像：</span></span><br><span class="line"><span class="string">（1）阿里云 http://mirrors.aliyun.com/pypi/simple/</span></span><br><span class="line"><span class="string">（2）豆瓣http://pypi.douban.com/simple/</span></span><br><span class="line"><span class="string">（3）清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/</span></span><br><span class="line"><span class="string">（4）中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/</span></span><br><span class="line"><span class="string">（5）华中科技大学http://pypi.hustunique.com/</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">pip install appium-python-client -i <span class="string">"https://pypi.doubanio.com/simple/"</span></span><br></pre></td></tr></table></figure><h3 id="至此，环境搭建已完成。"><a href="#至此，环境搭建已完成。" class="headerlink" title="至此，环境搭建已完成。"></a>至此，环境搭建已完成。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Appium" scheme="http://mypeng.site/tags/Appium/"/>
    
  </entry>
  
  <entry>
    <title>面试-个人介绍</title>
    <link href="http://mypeng.site/posts/8bb446da"/>
    <id>http://mypeng.site/posts/8bb446da</id>
    <published>2021-12-02T14:36:57.000Z</published>
    <updated>2021-12-02T14:36:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="面试宝典"><a href="#面试宝典" class="headerlink" title="面试宝典"></a>面试宝典</h3><p>当面试官让你介绍下的时候你会怎么讲呢？</p><p>面试官你好，我是XXX，目前在XX公司 花小猪营销 部门工作，主要负责花小猪乘客司机的拉新模块和花小猪司机测的权益方向的测试。主要工作是保障拉新模块的接口测试&amp;H5&amp;小程序的测试工作。<br>司机权益方向主要负责司机抽佣的后端模块测试。</p><p>介绍，我的项目是做什么的，涉及到哪些业务线，我主要负责那块测试，主要做那块的测试工作</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="面试宝典" scheme="http://mypeng.site/tags/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>ADB常用命令及其用法大全</title>
    <link href="http://mypeng.site/posts/3447541d"/>
    <id>http://mypeng.site/posts/3447541d</id>
    <published>2021-11-28T14:33:53.000Z</published>
    <updated>2021-11-28T14:33:53.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="ADB常用命令及其用法大全"><a href="#ADB常用命令及其用法大全" class="headerlink" title="ADB常用命令及其用法大全"></a>ADB常用命令及其用法大全</h2><h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><blockquote><p>本文主要记述ADB的常用命令，关于ADB用法大全，可参考文末链接</p></blockquote><h4 id="ADB简介："><a href="#ADB简介：" class="headerlink" title="ADB简介："></a>ADB简介：</h4><p>ADB，即 Android Debug Bridge，它是 Android 开发/测试人员不可替代的强大工具，也是 Android 设备玩家的好玩具。安卓调试桥 (Android Debug Bridge, adb)，是一种可以用来操作手机设备或模拟器的命令行工具。它存在于 sdk/platform-tools 目录下。虽然现在 Android Studio 已经将大部分 ADB 命令以图形化的形式实现了，但是了解一下还是有必要的。<br>注： 有部分命令的支持情况可能与 Android 系统版本及定制 ROM 的实现有关。</p><h4 id="查看当前连接设备："><a href="#查看当前连接设备：" class="headerlink" title="查看当前连接设备："></a>查看当前连接设备：</h4><blockquote><p>查看当前连接设备：</p><blockquote><p>adb devices</p></blockquote></blockquote><blockquote><p>查看当前设备的详细信息</p><blockquote><p>adb devices -l</p></blockquote></blockquote><blockquote><p>如果发现多个设备：</p><blockquote><p>adb -s 设备号 其他指令</p></blockquote></blockquote><h4 id="adb进程启动和终止"><a href="#adb进程启动和终止" class="headerlink" title="adb进程启动和终止"></a>adb进程启动和终止</h4><blockquote><p>启动服务进程</p><blockquote><p>adb start-server</p></blockquote></blockquote><blockquote><p>杀死后台服务进程</p><blockquote><p>adb kill-server</p></blockquote></blockquote><h4 id="查看当前运行的Activity"><a href="#查看当前运行的Activity" class="headerlink" title="查看当前运行的Activity:"></a>查看当前运行的Activity:</h4><blockquote><p>windows环境下:</p><blockquote><p>adb shell dumpsys activity | findstr “mFocusedActivity”</p></blockquote></blockquote><blockquote><p>Linux、Mac环境下：</p><blockquote><p>adb shell dumpsys activity | grep “mFocusedActivity”</p></blockquote></blockquote><h4 id="查看日志："><a href="#查看日志：" class="headerlink" title="查看日志："></a>查看日志：</h4><blockquote><blockquote><p>adb logcat</p></blockquote></blockquote><blockquote><p>将adb日志保存到文件</p><blockquote><p>adb logcat &gt; 本地文件名</p></blockquote></blockquote><h4 id="安装apk文件："><a href="#安装apk文件：" class="headerlink" title="安装apk文件："></a>安装apk文件：</h4><blockquote><blockquote><p>adb install xxx.apk</p></blockquote></blockquote><blockquote><p>此安装方式，如果已经存在，无法安装；推荐使用覆盖安装：</p><blockquote><p>adb install -r xxx.apk</p></blockquote></blockquote><blockquote><p>比分直接RUN出来的包是test-onlu的无法安装，推荐使用<strong>-t</strong></p><blockquote><p>adb install -r -t xxx.apk</p></blockquote></blockquote><h4 id="卸载App"><a href="#卸载App" class="headerlink" title="卸载App:"></a>卸载App:</h4><blockquote><p>adb uninstall com.zhy.app</p></blockquote><blockquote><p>如果想要保留数据，则：</p><blockquote><p>adb uninstall -k com.zhy.app</p></blockquote></blockquote><h4 id="传递文件："><a href="#传递文件：" class="headerlink" title="传递文件："></a>传递文件：</h4><blockquote><p>往手机SDCard传递文件：</p><blockquote><p>adb push 文件名 手机端SDCard路径</p></blockquote></blockquote><blockquote><p>例如：</p><blockquote><p>adb push 帅照.jpg /sdcard/</p></blockquote></blockquote><blockquote><p>从手机端下载文件：</p><blockquote><p>adb pull /sdcard/xxx.txt</p></blockquote></blockquote><blockquote><p>查看手机端安装的所有app包名:</p><blockquote><p>adb shell pm list packages</p></blockquote></blockquote><h4 id="启动Activity"><a href="#启动Activity" class="headerlink" title="启动Activity:"></a>启动Activity:</h4><blockquote><p>adb shell am start 包名/完整Activity路径</p></blockquote><blockquote><p>例如：</p><blockquote><p>adb shell am start com.zhy.aaa/com.zhy.aaa.MainActivity</p></blockquote></blockquote><blockquote><p>如果需要携带参数(携带一个Intent,Key 为name):<br>adb shell am start com.zhy.aaa/com.zhy.aaa.MainActivity -e name zhy</p></blockquote><blockquote><p>启动一个隐式的Intent:</p><blockquote><p>adb shell am start -a “android.intent.action,VIEW” -d “<a href="https://www.google.com&quot;" target="_blank" rel="noopener">https://www.google.com&quot;</a></p></blockquote></blockquote><h4 id="发送广播："><a href="#发送广播：" class="headerlink" title="发送广播："></a>发送广播：</h4><blockquote><p>adb shell am broadcast -a “broadcastactionfilter”</p></blockquote><blockquote><p>如果需要携带参数（携带一个Intent,key为name）:</p><blockquote><p>adb shell am broadcast -a “broadcastactionfilter” -e name zhy</p></blockquote></blockquote><h4 id="启动服务："><a href="#启动服务：" class="headerlink" title="启动服务："></a>启动服务：</h4><blockquote><p>adb shell am startservice “com.zhy.aaa/com.zhy.aaa.MyService”</p></blockquote><h4 id="屏幕截图："><a href="#屏幕截图：" class="headerlink" title="屏幕截图："></a>屏幕截图：</h4><blockquote><p>可以使用screencap命令来进行手机屏幕截图，例如：</p><blockquote><p>adb shell screencap /sdcard/screen.png</p></blockquote></blockquote><h4 id="录制视频："><a href="#录制视频：" class="headerlink" title="录制视频："></a>录制视频：</h4><blockquote><p>可以使用screenrecord[options] filename命令来录制屏幕视频;<br>例如：</p><blockquote><p>adb shell screenrecord /sdcard/demo.mp4</p></blockquote></blockquote><h4 id="远程连接adb"><a href="#远程连接adb" class="headerlink" title="远程连接adb"></a>远程连接adb</h4><blockquote><p>通过 IP 地址连接设备。</p><blockquote><p>adb connect [device-ip-address]</p></blockquote></blockquote><blockquote><p>断开无线连接</p><blockquote><p>adb disconnect [device-ip-address]</p></blockquote></blockquote><h4 id="速查-ADB-用法大全-官方文档："><a href="#速查-ADB-用法大全-官方文档：" class="headerlink" title="速查 | ADB 用法大全|官方文档："></a>速查 | ADB 用法大全|官方文档：</h4><blockquote><p><a href="http://www.wanandroid.com/blog/show/2310" target="_blank" rel="noopener">http://www.wanandroid.com/blog/show/2310</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>jdk安装和配置环境变量</title>
    <link href="http://mypeng.site/posts/54eecc7d"/>
    <id>http://mypeng.site/posts/54eecc7d</id>
    <published>2021-05-26T12:51:29.000Z</published>
    <updated>2021-05-26T12:51:29.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>学习JAVA，必须得安装一下JDK(java development kit java开发工具包)，配置一下环境就可以学习JAVA了，下面是下载和安装JDK的教程：</p></blockquote><h2 id="1-JDK下载地址："><a href="#1-JDK下载地址：" class="headerlink" title="1.JDK下载地址："></a>1.JDK下载地址：</h2><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><p>点开链接你应该看到如下图所示的界面：</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIxODE2ODgy?x-oss-process=image/format,png" alt="这里写图片描述"> </p><h2 id="2-点击上图中箭头所指的地方，会出现下面的这个界面，此时你需要根据你的电脑系统来进行对应的版本进行选择，在选择版本和下载之前你需要首先接收协议，具体界面如下图所示："><a href="#2-点击上图中箭头所指的地方，会出现下面的这个界面，此时你需要根据你的电脑系统来进行对应的版本进行选择，在选择版本和下载之前你需要首先接收协议，具体界面如下图所示：" class="headerlink" title="2.点击上图中箭头所指的地方，会出现下面的这个界面，此时你需要根据你的电脑系统来进行对应的版本进行选择，在选择版本和下载之前你需要首先接收协议，具体界面如下图所示："></a>2.点击上图中箭头所指的地方，会出现下面的这个界面，此时你需要根据你的电脑系统来进行对应的版本进行选择，在选择版本和下载之前你需要首先接收协议，具体界面如下图所示：</h2><h3 id="3-双击以后进行JDK的安装（记得按照第二幅图修改一下安装路径，不要什么东西都安装到系统盘。。。）："><a href="#3-双击以后进行JDK的安装（记得按照第二幅图修改一下安装路径，不要什么东西都安装到系统盘。。。）：" class="headerlink" title="3.双击以后进行JDK的安装（记得按照第二幅图修改一下安装路径，不要什么东西都安装到系统盘。。。）："></a>3.双击以后进行JDK的安装（记得按照第二幅图修改一下安装路径，不要什么东西都安装到系统盘。。。）：</h3><h4 id="（1）双击进行安装界面如下所示："><a href="#（1）双击进行安装界面如下所示：" class="headerlink" title="（1）双击进行安装界面如下所示："></a>（1）双击进行安装界面如下所示：</h4><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIyMDI3NzMy?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjMwMTM2NDcy?x-oss-process=image/format,png" alt="这里写图片描述"></p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjMwMTQ5MzQ3?x-oss-process=image/format,png" alt="这里写图片描述"></p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjMwMjAwMDgy?x-oss-process=image/format,png" alt="这里写图片描述"></p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjMwMjEyMjM3?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>  <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjMwMjIyNTY1?x-oss-process=image/format,png" alt="这里写图片描述"></p><h2 id="4-安装完成后，需要进行环境变量的配置，右键我的电脑—属性—-高级系统设置就会看到下面的界面："><a href="#4-安装完成后，需要进行环境变量的配置，右键我的电脑—属性—-高级系统设置就会看到下面的界面：" class="headerlink" title="4.安装完成后，需要进行环境变量的配置，右键我的电脑—属性—-高级系统设置就会看到下面的界面："></a>4.安装完成后，需要进行环境变量的配置，右键我的电脑—属性—-高级系统设置就会看到下面的界面：</h2><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIyODUzMTEy?x-oss-process=image/format,png" alt="这里写图片描述"> </p><h2 id="5-点击上图中的环境变量，然后开始环境变量的配置："><a href="#5-点击上图中的环境变量，然后开始环境变量的配置：" class="headerlink" title="5.点击上图中的环境变量，然后开始环境变量的配置："></a>5.点击上图中的环境变量，然后开始环境变量的配置：</h2><h5 id="（1）点击系统变量下面的新建按钮，变量名JAVA-HOME（代表你的JDK安装路径），值对应的是你的JDK的安装路径。"><a href="#（1）点击系统变量下面的新建按钮，变量名JAVA-HOME（代表你的JDK安装路径），值对应的是你的JDK的安装路径。" class="headerlink" title="（1）点击系统变量下面的新建按钮，变量名JAVA_HOME（代表你的JDK安装路径），值对应的是你的JDK的安装路径。"></a>（1）点击系统变量下面的新建按钮，变量名JAVA_HOME（代表你的JDK安装路径），值对应的是你的JDK的安装路径。</h5><p>  <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIzMDE5ODAw?x-oss-process=image/format,png" alt="这里写图片描述"> </p><h5 id="（2）继续在系统变量里面新建一个CLASSPATH变量，其变量值如下图所示："><a href="#（2）继续在系统变量里面新建一个CLASSPATH变量，其变量值如下图所示：" class="headerlink" title="（2）继续在系统变量里面新建一个CLASSPATH变量，其变量值如下图所示："></a>（2）继续在系统变量里面新建一个CLASSPATH变量，其变量值如下图所示：</h5><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIzMjAxMjM4?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>此处需要注意：最前面有一个英文状态下的小圆点。。。。很多初学者在配置环境变量的时候就会跌倒在这个坑里。</p><h5 id="（3）在你的系统变量里面找一个变量名是PATH的变量，需要在它的值域里面追加一段如下的代码："><a href="#（3）在你的系统变量里面找一个变量名是PATH的变量，需要在它的值域里面追加一段如下的代码：" class="headerlink" title="（3）在你的系统变量里面找一个变量名是PATH的变量，需要在它的值域里面追加一段如下的代码："></a>（3）在你的系统变量里面找一个变量名是PATH的变量，需要在它的值域里面追加一段如下的代码：</h5><blockquote><p>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</p></blockquote><p>此时你应该在你原有的值域后面追加，记得在原有的值域后面记得添加一个英文状态下的分号。<br>最后点击确定，此时JDK的环境变量配置就完成了。</p><h2 id="6-测试自己所配置的环境变量是否正确"><a href="#6-测试自己所配置的环境变量是否正确" class="headerlink" title="6.测试自己所配置的环境变量是否正确"></a>6.测试自己所配置的环境变量是否正确</h2><p>（1）WINDOWS+R键，输入cmd，进入命令行界面，如下所示：</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIzNzM1MTAw?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>（2）输入java -version命令，可以出现如下图的提示，你可以看你安装的JDK版本。</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjIzOTAxNTA3?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>（3）输入javac命令可以出现如下的提示：</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjI0MDA1ODgy?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>（4）输入java命令就会出现如下图所示的结果</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjI0MTMwMjI2?x-oss-process=image/format,png" alt="这里写图片描述"> </p><h2 id="7-写一段代码可以验证一下"><a href="#7-写一段代码可以验证一下" class="headerlink" title="7.写一段代码可以验证一下"></a>7.写一段代码可以验证一下</h2><h5 id="（1）我在E盘新建了一个文件夹叫javafile，在里面有一个Java文件，名字叫TestJava-java，此时需要注意，你的文件名字后缀一定是-java"><a href="#（1）我在E盘新建了一个文件夹叫javafile，在里面有一个Java文件，名字叫TestJava-java，此时需要注意，你的文件名字后缀一定是-java" class="headerlink" title="（1）我在E盘新建了一个文件夹叫javafile，在里面有一个Java文件，名字叫TestJava.java，此时需要注意，你的文件名字后缀一定是.java"></a>（1）我在E盘新建了一个文件夹叫javafile，在里面有一个Java文件，名字叫TestJava.java，此时需要注意，你的文件名字后缀一定是.java</h5><h5 id="（2）你需要在你的文件里面写下面的代码："><a href="#（2）你需要在你的文件里面写下面的代码：" class="headerlink" title="（2）你需要在你的文件里面写下面的代码："></a>（2）你需要在你的文件里面写下面的代码：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class TestJava&#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">System.out.println(&quot;I am a  java new learner!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（3）继续windows-r键进入dos命令行，你需要首先进入你java文件所在的目录，然后分别使用javac命令对你的java文件进行编译，然后使用java命令来解析你的javac命令编译的结果，就会如下图所示这样："><a href="#（3）继续windows-r键进入dos命令行，你需要首先进入你java文件所在的目录，然后分别使用javac命令对你的java文件进行编译，然后使用java命令来解析你的javac命令编译的结果，就会如下图所示这样：" class="headerlink" title="（3）继续windows+r键进入dos命令行，你需要首先进入你java文件所在的目录，然后分别使用javac命令对你的java文件进行编译，然后使用java命令来解析你的javac命令编译的结果，就会如下图所示这样："></a>（3）继续windows+r键进入dos命令行，你需要首先进入你java文件所在的目录，然后分别使用javac命令对你的java文件进行编译，然后使用java命令来解析你的javac命令编译的结果，就会如下图所示这样：</h5><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjI0OTQxNzc4?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>此处一定要注意：必须进入文件所在的目录；其次使用javac命令 文件的名字的后面一定要跟着.java的文件后缀；使用java命令时.java后缀可以不用写。<br>当你执行完javac命令如果没有错误提示，说明通过了编译，就会在你的文件目录下生成一个同名的.class文件。</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwNjE4MjI1MjAxNjI5?x-oss-process=image/format,png" alt="这里写图片描述"> </p><p>如果你完成了以上的所有，并且结果显示正确，那么说明你的JDK安装和环境配置都很成功，此时你就可以开始你的JAVA学习了。<br>JDK1.8 API链接：<br><a href="http://docs.oracle.com/javase/8/docs/api/" target="_blank" rel="noopener">http://docs.oracle.com/javase/8/docs/api/</a><br>JAVA tutorials:<br><a href="http://docs.oracle.com/javase/tutorial/" target="_blank" rel="noopener">http://docs.oracle.com/javase/tutorial/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【接口测试】postman做接口测试04-常见类型接口请求</title>
    <link href="http://mypeng.site/posts/be476180"/>
    <id>http://mypeng.site/posts/be476180</id>
    <published>2021-03-27T12:38:24.000Z</published>
    <updated>2021-03-27T12:38:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>接下来我们介绍俩种表单 ，分别是：application/x-www-form-urlencoded和multipart/form-data。它们都支持表单请求，所不同的是后一种支持上传文件，而前一种只支持表单 。</p><h2 id="三、表单类型的请求"><a href="#三、表单类型的请求" class="headerlink" title="三、表单类型的请求"></a>三、表单类型的请求</h2><h4 id="1-什么是表单-？"><a href="#1-什么是表单-？" class="headerlink" title="1. 什么是表单 ？"></a>1. 什么是表单 ？</h4><blockquote><p>简单理解就是在请求头中查看Content-Type，它的值如果是:application/x-www-form-urlencoded .那么就说明客户端提交的数据是以表单形式提交的</p></blockquote><p>我们都知道，在发送HTTP请求的时候，一个请求中一般包含三个部分，分别是请求行，请求头，请求体 。不同的接口，请求体的数据类型是不一样的，比较常见的一种就是表单类型，见下图</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200414110309980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p><h4 id="2-postman中如何请求？"><a href="#2-postman中如何请求？" class="headerlink" title="2. postman中如何请求？"></a>2. postman中如何请求？</h4><p>在postman请求上图的接口，我们只需要填写四个参数，分别是：</p><p>请求方法：POST<br>请求URL：<a href="http://localhost/index.php?m=Home&amp;c=User&amp;a=do_login&amp;t=0.21942974229794432" target="_blank" rel="noopener">http://localhost/index.php?m=Home&amp;c=User&amp;a=do_login&amp;t=0.21942974229794432</a><br>请求头：Content-Type：application/x-www-form-urlencoded<br>请求体： username=13088888888&amp;password=123456&amp;verify_code=8888</p><h4 id="3-实现步骤："><a href="#3-实现步骤：" class="headerlink" title="3. 实现步骤："></a>3. 实现步骤：</h4><ol><li>打开postman，新建一个请求 。</li><li>在请求中设置以上四个参数，点击Send按钮。</li><li>在postman中设置请求体类型为，需要选择body-&gt; x-www-form-urlencoded</li><li>查看响应数据。</li></ol><p> <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200414110543350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p><h2 id="四、支持上传文件的表单请求"><a href="#四、支持上传文件的表单请求" class="headerlink" title="四、支持上传文件的表单请求"></a>四、支持上传文件的表单请求</h2><h4 id="1-什么是文件请求？"><a href="#1-什么是文件请求？" class="headerlink" title="1. 什么是文件请求？"></a>1. 什么是文件请求？</h4><p>在做接口测试时，也会遇到需要上传文件的接口，比如微信的更新头像。这就需要另外一种表单的支持：multipart/form-data。这种类型的表单既支持上面类型的表单请求，同时支持上传文件。 它的请求报文往往是这样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST http:&#x2F;&#x2F;localhost&#x2F;index.php&#x2F;home&#x2F;Uploadify&#x2F;imageUp&#x2F;savepath&#x2F;head_pic&#x2F;pictitle&#x2F;banner&#x2F;dir&#x2F;images.html HTTP&#x2F;1.1</span><br><span class="line">Content-Type: multipart&#x2F;form-data</span><br><span class="line">file&#x3D;a1.jpg</span><br></pre></td></tr></table></figure><p>这种类型的接口，在postman中该如何请求呢 ？ 我们先分析需要填写的参数 。<br>请求方法：POST<br>请求URL：<a href="http://localhost/index.php/home/Uploadify/imageUp/savepath/head_pic/pictitle/banner/dir/images.html" target="_blank" rel="noopener">http://localhost/index.php/home/Uploadify/imageUp/savepath/head_pic/pictitle/banner/dir/images.html</a><br>请求类型：multipart/form-data<br>请求体：file=a1.jpg</p><h4 id="2-实现步骤："><a href="#2-实现步骤：" class="headerlink" title="2. 实现步骤："></a>2. 实现步骤：</h4><ol><li><p>打开postman，新建一个请求 。</p></li><li><p>在请求中设置以上四个参数，点击Send按钮。</p></li><li><p>注意：在postman中设置请求体类型，需要选择body-&gt; form-data 。</p></li><li><p>file中要选择File类型，然后上传本地的文件 。</p></li><li><p>查看响应数据。</p><p><img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200414111439455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p></li></ol><blockquote><p>总结 ，以上四种类型的接口就是我们常见的接口请求，简单的来说，其实就是在Body中分别选择form-data(支持上传文件)，x-www-form-urlencoded(表单),raw-json（json）。最后填写响应的请求数据即可 。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="postman" scheme="http://mypeng.site/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>【接口测试】postman做接口测试03-常见类型接口请求</title>
    <link href="http://mypeng.site/posts/66841aa6"/>
    <id>http://mypeng.site/posts/66841aa6</id>
    <published>2021-03-20T12:18:17.000Z</published>
    <updated>2021-03-20T12:18:17.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在做接口测试时，我们经常遇到以下4种类型的接口，分别是查询参数接口，表单类型的接口，支持文件上传的接口以及json类型的接口 。那么这些类型的接口在postman如何去请求呢 ？</p><h2 id="一、查询参数的接口请求"><a href="#一、查询参数的接口请求" class="headerlink" title="一、查询参数的接口请求"></a>一、查询参数的接口请求</h2><h4 id="1-什么是查询参数"><a href="#1-什么是查询参数" class="headerlink" title="1. 什么是查询参数?"></a>1. 什么是查询参数?</h4><blockquote><p>所谓的查询参数，其实就是URL地址中问号（?）后面的部分就叫查询参数</p></blockquote><p>比如：<a href="http://cx.shouji.360.cn/phonearea.php?number=13012345678" target="_blank" rel="noopener">http://cx.shouji.360.cn/phonearea.php?number=13012345678</a> 。在这个接口中，查询参数就是:number=13012345678 。而这一部分是由有键值对组成，格式为：key1=value1&amp;key2=value2, 如果有多组键值对，需要用&amp;隔开 。</p><h4 id="2-postman如何请求"><a href="#2-postman如何请求" class="headerlink" title="2. postman如何请求?"></a>2. postman如何请求?</h4><ol><li><p>在postman中实现这类接口请求非常简单，一般就需要明确俩个参数即可，一个是请求方法，一个请求地址。</p></li><li><p>针对上面的那个接口，地址已经给出 ，而它的请求方法是get 。那么在postman中只需要把这俩个参数填写上即可请求 。</p></li></ol><h4 id="3-具体实现步骤："><a href="#3-具体实现步骤：" class="headerlink" title="3. 具体实现步骤："></a>3. 具体实现步骤：</h4><ol><li><p>打开postman，新建一个请求。</p></li><li><p>在请求方法中选择请求方法：GET,因为在postman中默认的请求方法就是GET,所以这一步可以忽略</p></li><li><p>接口URL中输入地址，点击Send按钮就发送请求了 。</p></li></ol><p> <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200414104224746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p><blockquote><p>说明：查询参数的URL一般直接拷贝到输入的URL地址栏中就可以了，当然也可以把查询参数在Params中输入，俩者的效果是一样的 。</p></blockquote><h2 id="二、json类型的接口请求"><a href="#二、json类型的接口请求" class="headerlink" title="二、json类型的接口请求"></a>二、json类型的接口请求</h2><h4 id="1-什么是文件请求？"><a href="#1-什么是文件请求？" class="headerlink" title="1. 什么是文件请求？"></a>1. 什么是文件请求？</h4><blockquote><p>json类型的请求参数是接口测试中最常见的一种情况了 ，常用于创建活动&amp;商品等， 它的请求体类型为json,我们来看下这个请求报文 。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST http:&#x2F;&#x2F;xxx&#x2F;api&#x2F;sys&#x2F;login HTTP&#x2F;1.1</span><br><span class="line">Content-Type: application&#x2F;json;charset&#x3D;UTF-8</span><br><span class="line"></span><br><span class="line">&#123;&quot;account&quot;:&quot;root&quot;,&quot;password&quot;:&quot;123456&quot;&#125;</span><br></pre></td></tr></table></figure><p>根据以上报文，我们可以分析出，我们在postman只需要填写四个参数即可，具体如下：</p><p>请求方法：POST<br>请求地址：<a href="http://xxx/api/sys/login" target="_blank" rel="noopener">http://xxx/api/sys/login</a><br>请求体类型：json<br>请求体数据：{“account”:”root”,”password”:”123456”}</p><h4 id="2-实现步骤："><a href="#2-实现步骤：" class="headerlink" title="2. 实现步骤："></a>2. 实现步骤：</h4><ol><li><p>打开postman，新建一个请求 。</p></li><li><p>在请求中设置以上四个参数，点击Send按钮。</p></li><li><p>查看响应数据。</p></li></ol><blockquote><p>注意：在postman中设置请求体类型，需要选择body-&gt; raw -JSON</p></blockquote><p> <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200414104923196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="postman" scheme="http://mypeng.site/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>【接口测试】postman做接口测试02-发送第一个请求</title>
    <link href="http://mypeng.site/posts/8a00d2ea"/>
    <id>http://mypeng.site/posts/8a00d2ea</id>
    <published>2021-03-13T15:30:00.000Z</published>
    <updated>2021-03-13T15:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-界面导航说明"><a href="#1-界面导航说明" class="headerlink" title="1.界面导航说明"></a>1.界面导航说明</h2><p>在使用postman发送请求前，我们先来看下postman的主界面。来简单的了解下这款工具的主要功能 。</p><p> <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200413213052761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p><h2 id="2-发送第一个请求"><a href="#2-发送第一个请求" class="headerlink" title="2.发送第一个请求"></a>2.发送第一个请求</h2><p>打开postman，点击+加号打开一个新的请求页。</p><p>​    在请求的URL中输入请求地址：<a href="http://www.weather.com.cn/data/sk/101010100.html" target="_blank" rel="noopener">http://www.weather.com.cn/data/sk/101010100.html</a></p><p>​    点击Send按钮，这时就可以在下部的窗格中看到来自服务器的json响应数据</p><p>  <img src= "/img/loading1.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200413213338723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZlbnVzdGVjaDA5MTk=,size_16,color_FFFFFF,t_70" alt="img"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="postman" scheme="http://mypeng.site/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>【接口测试】postman做接口测试01-基本介绍与安装</title>
    <link href="http://mypeng.site/posts/d7719dab"/>
    <id>http://mypeng.site/posts/d7719dab</id>
    <published>2021-03-06T14:00:00.000Z</published>
    <updated>2021-03-06T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>postman是一款支持http协议的接口测试工具，其主要特点就是功能强大，使用简单。 对于我们做接口测试来说，如果选择工具的话，postman可以是一款非常值得推荐的工具 。</p></blockquote><h4 id="postman安装步骤（以windows为例）："><a href="#postman安装步骤（以windows为例）：" class="headerlink" title="postman安装步骤（以windows为例）："></a>postman安装步骤（以windows为例）：</h4><p>访问postman官方网站，下载最新版本，访问地址：<a href="https://www.postman.com/downloads/" target="_blank" rel="noopener">https://www.postman.com/downloads/</a></p><p>进入到下载页面，根据自己电脑下载对应的版本。</p><p>击下载的安装包，进入到安装界面，直到用户登录和注册界面。选择跳过，会进入到postman主界面，至此postman安装成功。</p><p> <img src= "/img/loading1.gif" data-lazy-src="/img/postman_down01.png" alt="down"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="postman" scheme="http://mypeng.site/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>技术路线专家域</title>
    <link href="http://mypeng.site/posts/8aa14a73"/>
    <id>http://mypeng.site/posts/8aa14a73</id>
    <published>2021-03-02T13:01:30.000Z</published>
    <updated>2021-03-02T13:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在技术路线，向上继续提升的方向，我们称之为“技术专家”；如果说前面描述的技术职位的所涉范围都定位在企业内部，即企业级资深性能测试工程师，那么技术专家，我们可以看作是领域级专项人才！随着软件测试行业的职位不断细化，每个人在自己擅长的领域走向深入，都可以成为该领域的技术专家，技术专家在自已经营的领域里，具有个人独到的见解和深厚的技术实力，而这类人才可以不再从事具体的测试工作，而是提供行业性测试技术咨询、培训等，为软件测试整体行业的发展，起到了鲜明的带头作用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>技术路线高级域</title>
    <link href="http://mypeng.site/posts/bbd06fa5"/>
    <id>http://mypeng.site/posts/bbd06fa5</id>
    <published>2021-02-21T12:59:38.000Z</published>
    <updated>2021-02-21T12:59:38.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>技术路线高级域：</strong></p><p>　　进入技术路线的高级域，根据中级域的四个路线，可以细分成五个路线，分别是资深自动化测试工程师、资深白盒测试工程师、资深性能测试工程师、安全性测试工程师、标准化工程师，这些高级技术类人才完全与常规测试经理平齐，属于软件测试职业发展高级域。</p><p>　　资深自动化测试工程师由自动化测试工程师晋升而来。如果说常规自动化测试工程师只是负责自动化测试脚本本身的设计与开发，那么资深自动化测试工程师的工作内容就是自动化测试这项工作的实施！也就是说，录制脚本-添加验证点-回放脚本只是最初始的自动化阶段，要在企业实施自动化测试，要有资深自动化测试工程师来设计数据驱动，开发测试框架，甚至一些企业内部自主开发小型测试工具（而非商业工具）的先例，这些也都是建立在资深自动化测试工程师具有深厚的技术底蕴后，主导其他人员协调完成的事情。</p><p>　　资深白盒测试工程师，其工作内容包含常规白盒测试工程师的内容，除此之外，要协助测试经理或测试总监攻关测试方法与技术性难题，因此其技术水平更加雄厚。如果常规白盒测试工程师是停留在某种程序设计语言类型的代码级测试，那么资深白盒测试工程师就要脱离程序设计语言本身，结合不同架构、多种开发技术交互的情况下，寻找代码测试方法，并具有对代码优化的能力。</p><p>　　资深性能测试工程师，来源于常规性能测试工程师，按照常规性能测试工程师的技术要求，资深性能测试工程师应该具备性能测试整体方案的设计能力，以及软件系统性能问题定位和性能优化的能力！除此之外，也要对主流的软件开发模式下的应用系统具有敏锐的洞察意识和感知意识。</p><p>　　安全性测试工程师，其实从性能测试工程师衍生出来，因为只有具备性能测试经验的人，才对软件的开发模式、实现架构和技术本身充分了解，才会感知和预见软件系统存在的安全漏洞，加上其本人是测试出身，才知道如何通过系统漏洞尝试攻击软件系统，达到测试的目的。目前国内软件行业对于安全性测试的认识尚未清晰，该职业也更没有普及，一般只限于军事类、机密类、防病毒类或其他高安全性软件的测试工作中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>技术路线中级域</title>
    <link href="http://mypeng.site/posts/42f034cf"/>
    <id>http://mypeng.site/posts/42f034cf</id>
    <published>2021-02-16T12:58:29.000Z</published>
    <updated>2021-02-16T12:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>技术路线中级域</strong>：</p><p>　　技术路线，划分为三个半方向，分别是自动化测试工程师、白盒测试工程师、性能测试工程师和认证测试工程师；前三者适用于通用软件测试领域，认证测试工程师乃嵌入式测试领域职位，至少目前仅出现在嵌入式领域。</p><p>　　自动化测试工程师，定义在功能测试范畴，指通常所说的依靠自动化测试工具进行软件黑盒测试的工程师。从大环境讲，自动化测试是软件测试执行阶段的必然趋势，社会对于软件测试的认可度以及对自动化测试人才的需求必将日益增加。</p><p>　　白盒测试工程师，定位于在软件测试周期的单元测试阶段对软件进行的代码级测试的人，包括代码走读、代码功能与逻辑测试、代码内存泄漏检查、代码运行效率检查、代码测试覆盖率分析等。如果说，自动化测试只是依靠脚本语言完成测试脚本编写与调试的过程（因为自动化测试工程师的工作重点不在编写脚本），对于自动化测试工程师的技术要求要相对偏低的话，那么白盒测试工程师就要对大型程序开发语言的完全掌握，因此其技术要求相对偏高！</p><p>　　性能测试工程师，即在系统测试阶段、功能测试后对软件系统性能指标进行采集分析和运行效率检测的人。在一个尽量压缩的测试流程里，功能测试可以手工进行，白盒测试可以不做，但是性能测试必须要做，除非该软件非网络类软件即单机版软件！软件测试，从宏观上可以划分为三个大方面：功能测试、性能测试、安全性测试，功能测试说明软件做对了，功能测试+性能测试说明软件做好了，三者结合起来说明软件做的非常好！安全测试暂且抛之不提，这是下一个发展域的内容，但是为了把软件做好，为了真正保证软件的质量，性能测试绝不容忽视；只因目前很多企业由于时间、成本、人力条件的限制，暂且不做性能测试。性能测试工程师相对来说，是三个技术路线里技术要求最高的，因为软件的性能瓶颈归根结底落实到代码的运行效率这个问题上，因此性能测试要做好，性能测试工程师起码要懂开发；而为了发现性能问题，要懂软件开发架构；为了定位性能问题，要懂操作系统、网络协议、应用服务器乃至数据库的原理与使用；为了最终解决性能问题，要根据定位的问题有针对性的对代码、操作系统、网络架构、服务器、数据库进行优化！当然性能测试是一个系统工程师，绝对不是一两个人的事情，对于常规性能测试工程师，具备定位性能问题的能力即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>管理+技术路线</title>
    <link href="http://mypeng.site/posts/d5268b29"/>
    <id>http://mypeng.site/posts/d5268b29</id>
    <published>2021-02-10T12:56:54.000Z</published>
    <updated>2021-02-10T12:56:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>管理+技术路线：</strong></p><p>　　首先是常规路线，这条发展路线要求管理与技术并重，因为软件测试的行业特点决定了这个因素：测试工程师向上晋升到测试主管、测试经理、测试总监，直至咨询域的更高方向！</p><p>　　测试主管是企业项目级主管，对于中小型软件公司也可以是企业级主管，属于中级发展域，适用范围是2到5年职业经验的测试从业者。其工作内容是根据项目经理或测试经理的计划安排，调配测试工程师执行模块级或项目级测试工作，并控制与监督软件缺陷的追踪，保证每个测试环节与阶段的顺利进行。严格来说，这个级别更多属于测试的设计者，因为企业的测试流程搭建是由更高级别的测试经理或相关管理者来做的，测试主管负责该流程的具体实施；而更多的工作，是思考如何对软件进行更加深入、全面的测试。测试主管比较有创造性的工作内容就是测试设计，而恰恰很多公司忽略了或没有精力来执行此工作内容！应该说，在一个企业里做了3年左右测试工作的人员，很容易晋升到该职位，而之所以晋升，是与个人测试技术的过硬、测试方法的丰富，加上对测试流程的监控力与执行力的职业素质息息相关！</p><p>　　测试经理是更高级别的测试管理者，属于高级测试方向域。对于大中型软件公司，该职位尤为重要，并且对其职业要求也比较高，一般适合4到8年的测试从业者，在管理与技术能力双双比较成熟的情况下，可以结合具体环境晋升到该级别。测试经理负责企业级或大型项目级总体测试工作的策划与实施。测试经理除了需要统筹整个企业级或项目级测试流程外，还要对于不同软件架构、不同开发技术下的测试方法进行研究与探索，为企业的测试团队成员提供指导与解决思路，同时还要合理调配不同专项测试的人力资源（如业务测试工程师、自动化测试工程师、白盒测试工程师、性能测试工程师），对软件进行全面的测试；另外，一些企业里，测试经理还需要与客户交流与沟通，负责部分的销售性或技术支持性工作。</p><p>　　测试总监，属于常规发展路线的最高域，该职位一般在大型或跨国型软件企业，或者专向于测试服务型企业有所设立，一般设立测试总监的企业，该职位都相当于CTO或副总的级别，是企业级或集团级测试工作的最高领导者，驾驭着企业全部的测试与测试相关资源，管理着企业的全部测试及质量类工作。而其职业要求，也是技术与管理双结合。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>软件测试攻城狮的成长之路</title>
    <link href="http://mypeng.site/posts/a9438874"/>
    <id>http://mypeng.site/posts/a9438874</id>
    <published>2021-02-05T12:52:14.000Z</published>
    <updated>2021-02-05T12:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>测试初期，我们并不清楚整个的测试职业发展如何，该篇文章详细地描述了各个阶段的职业目标， 希望给予迷茫的从业者启发思考。</p><p><strong>测试初级阶段：</strong></p><p>　　测试工程师，属于软件测试职业生涯的初级域，其适用范围是入行软件测试3年内的常规测试从业者，其主要工作内容是按照测试主管（即直接上司）分配的任务计划，编写测试用例、执行测试用例、提交软件缺陷，包括提交阶段性测试报告、参与阶段性评审等。</p><p><strong>管理+技术路线：</strong></p><p>　　首先是常规路线，这条发展路线要求管理与技术并重，因为软件测试的行业特点决定了这个因素：测试工程师向上晋升到测试主管、测试经理、测试总监，直至咨询域的更高方向！</p><p><strong>技术路线中级域</strong>：</p><p>　　技术路线，划分为三个半方向，分别是自动化测试工程师、白盒测试工程师、性能测试工程师和认证测试工程师；前三者适用于通用软件测试领域，认证测试工程师乃嵌入式测试领域职位，至少目前仅出现在嵌入式领域。</p><p>　　自动化测试工程师，定义在功能测试范畴，指通常所说的依靠自动化测试工具进行软件黑盒测试的工程师。从大环境讲，自动化测试是软件测试执行阶段的必然趋势，社会对于软件测试的认可度以及对自动化测试人才的需求必将日益增加。</p><p><strong>技术路线高级域：</strong></p><p>　　进入技术路线的高级域，根据中级域的四个路线，可以细分成五个路线，分别是资深自动化测试工程师、资深白盒测试工程师、资深性能测试工程师、安全性测试工程师、标准化工程师，这些高级技术类人才完全与常规测试经理平齐，属于软件测试职业发展高级域。</p><p>　　<strong>技术路线专家域：</strong></p><p>　　在技术路线，向上继续提升的方向，我们称之为“技术专家”；如果说前面描述的技术职位的所涉范围都定位在企业内部，即企业级资深性能测试工程师，那么技术专家，我们可以看作是领域级专项人才！随着软件测试行业的职位不断细化，每个人在自己擅长的领域走向深入，都可以成为该领域的技术专家，技术专家在自已经营的领域里，具有个人独到的见解和深厚的技术实力，而这类人才可以不再从事具体的测试工作，而是提供行业性测试技术咨询、培训等，为软件测试整体行业的发展，起到了鲜明的带头作用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>开篇</title>
    <link href="http://mypeng.site/posts/39cb083c"/>
    <id>http://mypeng.site/posts/39cb083c</id>
    <published>2021-02-04T11:19:27.000Z</published>
    <updated>2021-02-04T11:19:27.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>作为软件开发过程中一个非常重要的环节</strong>，软件测试越来越成为软件开发商和用户关注的焦点。完善的测试是软件质量的保证，因此软件测试就成了一项重要而艰巨的工作。要做好这项工作当然也绝非易事。下面我着重谈谈自己在做软件测试工作中总结出来的一些经验和技巧，以供大家参考。  </p><p>  <strong>1.功能点的细化</strong><br>  在进行测试前，先将所要测试的功能细分，填写《测试功能细分表》，有针对性的运行功能测试案例，逐个对每个功能细分点进行测试。在每次运行测试案例之前，明确此次运行的目的和预期的输出结果，并要做好记录。<br>  <strong>2.注意测试中的错误集中发生现象</strong><br>  有一些错误是和程序开发人员的编程水平和习惯有很大关系的。例如程序中的拼写错误，习惯用法等。注意收集并记录这些现象，有助于更快、更多地发现类似的错误。  </p><p>  <strong>3.尽可能多的使用非常规的测试</strong><br>  充分考虑到各种合法的输入和不合法的输入以及各种边界条件。边界值往往是最容易出现异常的情况，特殊的情况下甚至要制造极端的状态和意外状态，比如网络突然中断，和电源突然断电等情况。具体有以下几种情况：<br>  （1） 边界测试，测试用户输入框中的数值的最大数和最小数，以及为空时的情况。  </p><p> （2） 非法测试，例如在输入数字的地方输入字母。  </p><p> （3） 跟踪测试，跟踪一条数据的流程,保证数据的正确性。<br> （4） 在开始测试之前应保证数据的正确性，然后再从系统中找出各种BUG。<br> （5） 接口测试，程序往往在接口的地方很容易发生错误，要在此模块测试勿掉以轻心。<br> （6） 代码重用测试，在开发过程中有些模块功能几乎相同，开发人员在重用代码时可能忘记在原有代码上修改或修改不全面，而造成的错误。<br> （7） 突发事件测试，服务器上可能发生意外情况的测试，如网络中断，电源断电等极端的情况。  </p><p> （8） 外界环境测试，有些系统在开发时依赖于另外一个系统,当另外一个系统发生错误时, 这个系统所受到的影响的情况。<br> （9） 系统兼容测试，例如有些程序在IE6能运行正常，到IE5下不能运行。有些程序在WIN2000下能运行，而到WIN98却不能运行。<br> （10） 用户的易用性测试，往往用户的需求是不断的变化的，而其中的一部份变化的原因，是由用户操作上不方便引起的。<br>  <strong>4.对测试错误结果一定要有一个确认的过程。</strong>  </p><p>　一般有A测试出来的错误，一定要有一个B来确认。  </p><p>  <strong>5.制定严格的测试计划</strong><br>  测试时间安排的尽量宽松，不要希望在极短的时间内完成一个高水平的测试。  </p><p>  <strong>6.回归测试的关联性一定要引起充分的注意</strong><br>  在开发人员刚修复Bug之后的地方,再找一找，往往开发人员只修复报告出来的缺陷而不去考虑别的功能在修改时可能会重新造成错误。修改一个错误而引起更多的错误出现的现象并不少见。   </p><p>  <strong>7.测试文档要尽可能详细</strong><br>  《测试功能细分表》中的功能点可尽量的详细，如实、详细地记录每次运行测试案例的输入数据，输出数据，出错提示，进行测试的时间，完成测试的时间等，便于以后对测试工作的回溯。  </p><p>  <strong>8.重视交流和沟通</strong><br>  包括和程序开发人员的交流，同是测试人员之间的交流，网上技术论坛和网友的交流,和客户的交流等。多思考，多交流，多提问，通过多种沟通交流的途径，可以少走很多弯路，同时可以学到很多东西。  </p><p>  <strong>9.善于总结</strong><br>  在测试过程中发现的所有问题，异常情况，发现程序开发人员易犯，常犯的错误，各种有价值的经验教训，使用系统和操作数据库时发现或者学到的技巧，使用测试工具时的心得等等，都可以随手记录在笔记本或者电脑上。这些都将是今后工作中可以参照的珍贵资料，同时也会成为自己的宝贵经验。  </p><p> <strong>10.妥善保存一切测试过程文档</strong><br>  便于测试的重现，事后的跟踪，工作的回溯，总结，报告等都要依赖这些测试文档。<br>  总之，软件测试是整个软件开发过程中交付用户使用前的最后阶段，是软件质量保证的关键，一定要引起足够的重视。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>超实用的SQL语句之嵌套查询</title>
    <link href="http://mypeng.site/posts/f3908263"/>
    <id>http://mypeng.site/posts/f3908263</id>
    <published>2020-08-31T11:40:33.000Z</published>
    <updated>2020-08-31T11:40:33.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2>嵌套查询</h2><h3>什么是嵌套查询</h3>. 　　嵌套查询的意思是，一个查询语句(select-from-where)查询语句块可以嵌套在另外一个查询块的where子句中，称为嵌套查询。其中外层查询也称为父查询，主查询。内层查询也称子查询，从查询。<h3>嵌套查询的工作方式</h3> 　　先处理内查询，由内向外处理，外层查询利用内层查询的结果嵌套查询不仅仅可以用于父查询select语句使用。还可以用于insert、update、delete语句或其他子查询中。<h2>子查询的组成</h2> 1、包含标准选择列表组件的标准select查询。<p> 2、包含一个或多个表或者视图名称的标准from子句。</p><p> 3、可选的where子句。</p><p> 4、可选的group by子句。</p><p> 5、可选的having子句。</p><h2>子查询的语法规则</h2> 1、子查询的select查询总是使用圆括号括起来。<p> 2、不能包括compute或for.browse子句。</p><p> 3、如果同时指定top子句，则可能只包括order by子句。</p><p> 4、子查询最多可以嵌套到32层。个别查询可能会不支持32层嵌套。</p><p> 5、任何可以使用表达式的地方都可以使用子查询，只要它返回的是单个值。</p><p> 6、如果某个表只出现在子查询中二不出现在外部查询中，那么该表的列就无法包含在输出中。</p><h2>简单子查询</h2><strong>示例：</strong><pre><code>select name,age from person where age &gt;     (        select age from person         where name = &apos;孙权&apos;    )</code></pre><p><strong>输出结果为：</strong><br><img src= "/img/loading1.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glassy-sky-lisong/StaticFile1@master/post/4.jpg" alt="1"></p><h2>in嵌套查询</h2> 　　in关键字用于where子句中用来判断查询的表达式是否在多个值的列表中。返回满足in列表中的满足条件的记录。<p><strong>示例：</strong></p><pre><code>select name from person where countryid in (select countryid from countrywhere countryname = &apos;魏国&apos;)</code></pre><p><strong>输出结果为：</strong></p><img src= "/img/loading1.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glassy-sky-lisong/StaticFile1@master/post/3.jpg" alt="2"><h2>some嵌套查询</h2><h3>语法</h3> 　　some在sql中的逻辑运算符号，如果在一系列比较中，有些值为True，那么结果就为True。some的语法是：<pre><code>&lt;表达式&gt;{ =|&lt;&gt;|!=|&gt;|&gt;=|!&gt;|&lt;|&lt;=|!&lt;}some(子查询)</code></pre><p><strong>示例：</strong></p><pre><code>select name from person where countryid = some 　　　　　　--用等号和以下查询到的值比较，如果与其中一个相等，就返回(select countryid from countrywhere countryname = &apos;魏国&apos;)</code></pre><p><strong>输出结果为：</strong><br><img src= "/img/loading1.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glassy-sky-lisong/StaticFile1@master/post/2.jpg" alt="3"></p><h2>all嵌套查询</h2> 　　all是sql中的逻辑运算符好，如果一系列的比较都为true，那么结果才能为true。<h3>语法</h3><pre><code>&lt;表达式&gt;{ =|&lt;&gt;|!=|&gt;|&gt;=|!&gt;|&lt;|&lt;=|!&lt;}all(子查询)</code></pre><p><strong>示例：</strong></p><pre><code>select name from person where countryid &gt; all　　 --当countryid大于以下返回的所有id，此结果才为True，此结果才返回(select countryid from countrywhere countryname = &apos;魏国&apos;)</code></pre><p><strong>输出结果为：</strong><br><img src= "/img/loading1.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glassy-sky-lisong/StaticFile1@master/post/1.jpg" alt="4"></p><h2>exists嵌套查询</h2><h3>语法</h3> 　　exists是sql中的逻辑运算符号。如果子查询有结果集返回，那么就为True。exists代表“存在”的意义，它只查找满足条件的那些记录。<span style="color:red">一旦找到第一个匹配的记录后，就马上停止查找。</span><pre><code>exists　子查询</code></pre><p> 　　其中子查询是一个首先的select语句，不允许有compute子句和into关键字。<br>exists 的意思是，子查询是否有结果集返回。<br><strong>例如：</strong></p><pre><code>SELECT * FROM PersonWHERE exists(SELECT 1      --SELECT 0  SELECT NULL 返回结果都一样，因为这三个子查询都有结果集返回，因此总是True  SELECT * FROM Person照常执行)</code></pre><p> 　　但是如果子查询中因为加了条件而没有结果集返回，则主语句就不执行了：</p><pre><code>SELECT * FROM PersonWHERE exists(SELECT * FROM Person WHERE Person_Id = 100    --如果不存在Person_Id的记录，则子查询没有结果集返回，主语句不执行)</code></pre><p>最后感谢<a href="https://www.cnblogs.com/kissdodog/archive/2013/06/03/3116284.html" target="_blank" rel="noopener">不玩博客了！</a>同学的分享，么么哒！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="博客园博文" scheme="http://mypeng.site/categories/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%8D%9A%E6%96%87/"/>
    
    <category term="mybatis" scheme="http://mypeng.site/categories/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%8D%9A%E6%96%87/mybatis/"/>
    
    
    <category term="MySQL" scheme="http://mypeng.site/tags/MySQL/"/>
    
    <category term="MyBatis" scheme="http://mypeng.site/tags/MyBatis/"/>
    
    <category term="SQL技巧" scheme="http://mypeng.site/tags/SQL%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>博客美化——Silence主题皮肤</title>
    <link href="http://mypeng.site/posts/3ba53770"/>
    <id>http://mypeng.site/posts/3ba53770</id>
    <published>2020-08-30T12:08:31.000Z</published>
    <updated>2020-08-30T12:08:31.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>&emsp;&emsp;一款专注阅读的博客园主题，主要面向于经常混迹 博客园 的朋友。其追求大道至简的终极真理，界面追求简洁、运行追求高效、部署追求简单。</p><ul><li><a href="https://github.com/glassy-sky-lisong/SilenceSkin" target="_blank" rel="noopener">博客皮肤源码地址</a></li><li><a href="https://www.cnblogs.com/esofar" target="_blank" rel="noopener">预览地址</a></li><li><a href="https://github.com/esofar/cnblogs-theme-silence/blob/master/docs/deploy.md" target="_blank" rel="noopener">如何部署、使用皮肤</a></li><li><a href="https://www.cnblogs.com/esofar/p/cnblogs-theme-silence.html" target="_blank" rel="noopener">Silence作者的友链</a></li></ul><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>简洁优雅、精致漂亮的 UI 设计</li><li>提供多种风格主题以便适应各类用户的偏好</li><li>响应式设计，兼容手机端浏览器</li><li>提供事无巨细的部署文档</li><li>源码结构清晰并且注释完整，方便扩展</li></ul><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>&emsp;&emsp;请先确保您正在使用的机器已经安装 Node.js 和 Git 客户端。</p><pre><code>git clone https://github.com/esofar/cnblogs-theme-silence.git   # 克隆源码cd cnblogs-theme-silence                                        # 进入项目npm install                                                     # 安装依赖npm run build</code></pre><p>&emsp;&emsp;如果没有安装node。js或者不会使用的童鞋可以在我的GitHub，也就是博客皮肤源码地址中。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>&emsp;&emsp;重点部署之前使用博客园的cutorm皮肤，具体部署细节请详见’如何部署、使用皮肤’，如果又不会的话可以看一看我的配置作为参考（仅作为参考，找不回来别哭鼻子）<br><strong><em>CSS</em></strong></p><pre><code>&lt;!-- 溢出隐藏设置（放置在管理--&gt; 设置--&gt; css模块中） --&gt;#topics, #mainContent {    overflow: visible;}.cnblogs-markdown .hljs{    display:block;    color:#333;    overflow-x:auto;    background:#F2F4F5!important;    border:none!important;    font-family:Consolas,Monaco,&apos;Andale Mono&apos;,&apos;Ubuntu Mono&apos;,monospace!important;    padding:1em!important;    font-size:14px!important    }</code></pre><p><strong><em>侧边栏公告</em></strong></p><pre><code>&lt;!-- 在管理--&gt; 设置-&gt; 侧边栏公告(支持js代码、支持html代码) --&gt;&lt;script src=&quot;https://blog-static.cnblogs.com/files/glassysky/silence.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;    $.silence({        profile: {            enable: true,            avatar: &apos;https://gitee.com/glassyskyforgame/glassysky/blob/master/4c67d1a20cf431ade2873e284836acaf2fdd989e.jpg&apos;,            favicon: &apos;https://gitee.com/glassyskyforgame/glassysky/raw/master/4c67d1a20cf431ade2873e284836acaf2fdd989e.jpg&apos;,        },        catalog: {            enable: true,            move: true,            index: true,            level1: &apos;h2&apos;,            level2: &apos;h3&apos;,            level3: &apos;h4&apos;,        },        signature: {            enable: true,            home: &apos;https://www.cnblogs.com/glassysky/&apos;,            license: &apos;署名 4.0 国际&apos;,            link: &apos;https://creativecommons.org/licenses/by/4.0&apos;        },        reward: {            enable: true,            title: &apos;感谢小可爱投食&apos;,            wechat: &apos;https://images.cnblogs.com/cnblogs_com/esofar/972540/o_wechat.png&apos;,            alipay: &apos;https://images.cnblogs.com/cnblogs_com/esofar/972540/o_alipay.png&apos;        },        github: {            enable: true,            color: &apos;#fff&apos;,            fill: null,            link: &apos;https://github.com/glassy-sky-lisong&apos;        }    });&lt;/script&gt;&lt;!--外置主题css补丁--&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://blog-static.cnblogs.com/files/glassysky/sli.css&quot;/&gt;</code></pre><p><strong><em>会动的title</em></strong></p><pre><code>&lt;!-- 动态titlejs --&gt;&lt;script&gt; var OriginTitle = document.title; var titleTime; document.addEventListener(&apos;visibilitychange&apos;, function () { if                 (document.hidden) { document.title = &apos;╭(°A°`)╮ 页面崩溃啦 ~&apos;; clearTimeout(titleTime); } else { document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又    好了~&apos; + OriginTitle; titleTime = setTimeout(function () { document.title = OriginTitle; }, 2000); } }); &lt;/script&gt;</code></pre><p><strong><em>图片放大功能</em></strong></p><pre><code>&lt;!--图片放大的zoomcss和js--&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://blog-static.cnblogs.com/files/glassysky/zoom.css&quot;/&gt;&lt;script src=&quot;https://blog-static.cnblogs.com/files/glassysky/zoom.js&quot;&gt;&lt;/script&gt;&lt;!-- Bootstrap 的 transition.js cdn（过渡动画插件）--&gt;&lt;script type=&quot;text/javascript&quot;&gt;$(&apos;#cnblogs_post_body img&apos;).attr(&apos;data-action&apos;, &apos;zoom&apos;);&lt;/script&gt;</code></pre><h2 id="博客的皮肤风格"><a href="#博客的皮肤风格" class="headerlink" title="博客的皮肤风格"></a>博客的皮肤风格</h2><ul><li>简约·蓝<br><img src= "/img/loading1.gif" data-lazy-src="https://github.com/esofar/cnblogs-theme-silence/raw/master/docs/theme_default.png" alt="img1"> </li><li>暗黑·绿<br><img src= "/img/loading1.gif" data-lazy-src="https://github.com/esofar/cnblogs-theme-silence/raw/master/docs/theme_dark.png" alt="img2"></li><li>女神·粉<br><img src= "/img/loading1.gif" data-lazy-src="https://github.com/esofar/cnblogs-theme-silence/raw/master/docs/theme_goddess.png" alt="img3">  </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="博客园博文" scheme="http://mypeng.site/categories/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%8D%9A%E6%96%87/"/>
    
    <category term="博客美化" scheme="http://mypeng.site/categories/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%8D%9A%E6%96%87/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="博客园" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    
    <category term="博客美化" scheme="http://mypeng.site/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-admin插件使用</title>
    <link href="http://mypeng.site/posts/f84657b8"/>
    <id>http://mypeng.site/posts/f84657b8</id>
    <published>2020-07-26T04:53:00.000Z</published>
    <updated>2020-07-26T04:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-下载依赖包"><a href="#1-下载依赖包" class="headerlink" title="1.下载依赖包"></a>1.下载依赖包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><h2 id="2-启动hexo服务"><a href="#2-启动hexo服务" class="headerlink" title="2.启动hexo服务"></a>2.启动hexo服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm server -d</span><br></pre></td></tr></table></figure><h2 id="3-修改用户名、密码"><a href="#3-修改用户名、密码" class="headerlink" title="3.修改用户名、密码"></a>3.修改用户名、密码</h2><p>  在Hexo博客控制台页面-&gt;设置-&gt;用户名、密码一一填写，填写完毕后将页面最下面的config.yaml配置一键复制、粘贴，重启后即可生效</p>    <div id="aplayer-FgRGekvQ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="621465725" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86" data-listfolded="true" data-fixed="true" data-mini="true"    ></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Hexo" scheme="http://mypeng.site/categories/Hexo/"/>
    
    <category term="Admin" scheme="http://mypeng.site/categories/Hexo/Admin/"/>
    
    
    <category term="Hexo" scheme="http://mypeng.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>TIPS</title>
    <link href="http://mypeng.site/posts/50a2b841"/>
    <id>http://mypeng.site/posts/50a2b841</id>
    <published>2020-07-22T09:43:46.000Z</published>
    <updated>2020-07-22T09:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="文本文字"><a href="#文本文字" class="headerlink" title="文本文字"></a>文本文字</h2><span class='p red'>红色</span><span class='p yellow'>黄色</span><span class='p blue'>蓝色</span><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><h2 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h2><p>有颜色标签</p><div class="note red"><p>为简单的一句话提供的简便写法。</p></div><div class="note quote"><p>为简单的一句话提供的简便写法。</p></div><div class="note info"><p>为简单的一句话提供的简便写法。</p></div><div class="note warning"><p>为简单的一句话提供的简便写法。</p></div><div class="note done"><p>支持同样丰富的参数。</p></div><div class="note success"><p>支持同样丰富的参数。</p></div><div class="note danger"><p>支持同样丰富的参数。</p></div><div class="note error"><p>支持同样丰富的参数。</p></div><p>灰色标签</p><div class="note radiation"><p>支持同样丰富的参数。</p></div><div class="note bug"><p>支持同样丰富的参数。</p></div><div class="note idea"><p>支持同样丰富的参数。</p></div><div class="note link"><p>支持同样丰富的参数。</p></div><div class="note paperclip"><p>支持同样丰富的参数。</p></div><div class="note todo"><p>支持同样丰富的参数。</p></div><div class="note msg"><p>支持同样丰富的参数。</p></div><div class="note guide"><p>支持同样丰富的参数。</p></div><div class="note download"><p>支持同样丰富的参数。</p></div><div class="note up"><p>支持同样丰富的参数。</p></div><div class="note undo"><p>支持同样丰富的参数。</p></div><h2 id="块标签"><a href="#块标签" class="headerlink" title="块标签"></a>块标签</h2><div class="note quote">            <p class='p subtitle'>小标题</p><p>Windows 10不是為所有人設計,而是為每個人設計</p><p class='p subtitle'>嵌套测试</p><div class="note ">            <p>请坐和放宽，我正在帮你搞定一切…</p>          </div><p class='p subtitle'>Folding 测试</p><details ><summary> <p>点击查看更多</p> </summary>              <div class='content'>              <div class="note warning"><p>不要说我们没有警告过你</p></div><div class="note bug red">            <p>我们都有不顺利的时候</p>          </div>              </div>            </details>          </div><h2 id="上标式标签"><a href="#上标式标签" class="headerlink" title="上标式标签"></a>上标式标签</h2><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 markdown 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h1 id="ff"><a href="#ff" class="headerlink" title="ff"></a>ff</h1><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 markdown 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><p>This is my website, click the button <a class="btn-beautify button--animated " href="http://www.jerryc.me"   title="JerryC"><span>JerryC</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="http://www.jerryc.me"   title="JerryC"><span>JerryC</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><br>This is my website, click the button <a class="btn-beautify button--animated larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a></p><a class="btn-beautify button--animated block" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated block center larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated block right outline larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated blue larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated pink larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated red larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated purple larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated orange larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated green larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><div class="btn-center"><a class="btn-beautify button--animated outline larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline blue larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline pink larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline red larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline purple larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline orange larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline green larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display  </button><span class="hide-content">content</span></span><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display    </button><span class="hide-content"><p>content</p></span></div><div class="tabs" id="tab-id"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-id-1">标签名</button></li><li class="tab"><button type="button" data-href="#tab-id-2">标签名</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-id-1"><p><img src= "/img/loading1.gif" data-lazy-src="https://i.loli.net/2020/03/18/f5PQlWisvm9zbgK.jpg" alt=""></p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-id-2"><p>这里面写内容，支持的语法格式有限，请尽量<u>不要</u>写太过复杂的东西。</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><details ><summary> <p>查看图片测试</p> </summary>              <div class='content'>              <p><img src= "/img/loading1.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> <p>查看代码测试</p> </summary>              <div class='content'>                            </div>            </details><details yellow><summary> <p>查看列表测试</p> </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> <p>查看嵌套测试</p> </summary>              <div class='content'>              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class='content'>              <details ><summary> <p>查看嵌套测试3</p> </summary>              <div class='content'>              <p>hahaha <span><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><div class="audio"><audio controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/xaoxuu/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><p>$$E(A)=\sum_{j=1}^v \frac {s_{1j}+s_{2j}+….s_{mj}} sI(s_{1j}+s_{2j}+….s_{mj})$$<br>$$I(s_{1j}+s_{2j}+….s_{mj})=-\sum_{i=1}^mp_{ij}log(p_{ij})\p_{ij}=\frac {s_{ij}} {|s_j|}$$</p><h2 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h2><div class="tip success"><p>helloworld</p>          </div><hr><div class="tip wtgo"><p>为简单的一句话提供的简便写法。</p></div><div class="tip ban"><p>为简单的一句话提供的简便写法。</p></div><div class="tip home"><p>为简单的一句话提供的简便写法。</p></div><div class="tip important"><p>为简单的一句话提供的简便写法。</p></div><div class="tip ref"><p>为简单的一句话提供的简便写法。</p><p></p></div><div class="tip ffa"><p>为简单的一句话提供的简便写法。</p><p></p></div><div class="tip key"><p>为简单的一句话提供的简便写法。</p><p></p></div><div class="tip socd"><p>为简单的一句话提供的简便写法。</p><p></p></div>***<div class="tip success faa-wrench animated"><p>摇摆</p>          </div><div class="tip success faa-horizontal animated"><p>垂直抖动</p>          </div><div class="tip success faa-flash animated"><p>若隐若现</p>          </div><div class="tip success faa-pulse animated"><p>变色</p>          </div><div class="tip success faa-shake animated"><p>摇摆</p>          </div><h2 id="beautiful-btns"><a href="#beautiful-btns" class="headerlink" title="beautiful btns"></a>beautiful btns</h2><div class="btns circle grid5">            <a href='https://xaoxuu.com' target="_blank" rel="noopener" title='xaoxuu'><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a href='https://xaoxuu.com' target="_blank" rel="noopener" title='xaoxuu'><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a href='https://xaoxuu.com' target="_blank" rel="noopener" title='xaoxuu'><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a href='https://xaoxuu.com' target="_blank" rel="noopener" title='xaoxuu'><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a href='https://xaoxuu.com' target="_blank" rel="noopener" title='xaoxuu'><img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div><div class="btns rounded grid5">            <a href='/' title='下载源码'><i class='fa fa-download'></i>下载源码</a><a href='/' title='查看文档'><i class='fa fa-download'></i>查看文档</a>          </div><div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1' target="_blank" rel="noopener">  <i class="fa fa-apple"></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1' target="_blank" rel="noopener">  <i class="fa fa-apple"></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src= "/img/loading1.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><h2 id="metingjs"><a href="#metingjs" class="headerlink" title="metingjs"></a>metingjs</h2>    <div id="aplayer-qMEtBPrw" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="621465725" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86" data-listfolded="true" data-fixed="true" data-mini="true"    ></div><p>如左下角所示</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="生活杂谈" scheme="http://mypeng.site/tags/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
